var _user$project$Update$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SetDate':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							currentDate: _elm_lang$core$Maybe$Just(_p0._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'AdjustCalendar':
				var _p1 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							start: A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Day, _p1, model.start),
							end: A3(_rluiten$elm_date_extra$Date_Extra_Duration$add, _rluiten$elm_date_extra$Date_Extra_Duration$Day, _p1, model.end)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleCategory':
				var updatedCategories = A2(
					_elm_lang$core$List$map,
					function (c) {
						return _elm_lang$core$Native_Utils.eq(c.name, _p0._0) ? _elm_lang$core$Native_Utils.update(
							c,
							{selected: !c.selected}) : c;
					},
					model.categories);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{categories: updatedCategories}),
					_1: _user$project$Ports$storeFilteredCategories(
						A2(
							_elm_lang$core$List$map,
							function (_) {
								return _.name;
							},
							A2(
								_elm_lang$core$List$filter,
								function (_p2) {
									return !function (_) {
										return _.selected;
									}(_p2);
								},
								updatedCategories)))
				};
			case 'RetrieveFilteredCategories':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Ports$retrieveFilteredCategories(
						{ctor: '_Tuple0'})
				};
			default:
				var filteredCategories = A2(
					_elm_lang$core$List$map,
					function (c) {
						return A2(_elm_lang$core$List$member, c.name, _p0._0) ? _elm_lang$core$Native_Utils.update(
							c,
							{selected: false}) : _elm_lang$core$Native_Utils.update(
							c,
							{selected: true});
					},
					model.categories);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{categories: filteredCategories}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});

0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\ProgramData\\chocolatey\\lib\\npm\\tools\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'sass' ]
2 info using npm@1.4.9
3 info using node@v8.10.0
4 verbose cache add [ 'sass', null ]
5 verbose cache add name=undefined spec="sass" args=["sass",null]
6 verbose parsed url Url {
6 verbose parsed url   protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'sass',
6 verbose parsed url   path: 'sass',
6 verbose parsed url   href: 'sass' }
7 silly lockFile 5d7463cd-sass sass
8 verbose lock sass C:\Users\duff_l\AppData\Roaming\npm-cache\5d7463cd-sass.lock
9 silly lockFile 5d7463cd-sass sass
10 silly lockFile 5d7463cd-sass sass
11 verbose addNamed [ 'sass', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile abea0ec1-sass sass@
14 verbose lock sass@ C:\Users\duff_l\AppData\Roaming\npm-cache\abea0ec1-sass.lock
15 silly addNameRange { name: 'sass', range: '*', hasData: false }
16 verbose url raw sass
17 verbose url resolving [ 'https://registry.npmjs.org/', './sass' ]
18 verbose url resolved https://registry.npmjs.org/sass
19 info trying registry request attempt 1 at 11:28:08
20 http GET https://registry.npmjs.org/sass
21 http 200 https://registry.npmjs.org/sass
22 silly registry.get cb [ 200,
22 silly registry.get   { 'content-type': 'application/json; charset=UTF-8',
22 silly registry.get     server: 'UploadServer',
22 silly registry.get     'cache-control': 'max-age=300',
22 silly registry.get     'last-modified': 'Tue, 27 Mar 2018 21:34:15 GMT',
22 silly registry.get     etag: '"5abab8d7-6b3e"',
22 silly registry.get     'x-npm-region': 'US-Central',
22 silly registry.get     'content-encoding': 'gzip',
22 silly registry.get     'content-length': '6335',
22 silly registry.get     'accept-ranges': 'bytes',
22 silly registry.get     date: 'Fri, 30 Mar 2018 16:28:07 GMT',
22 silly registry.get     via: '1.1 varnish',
22 silly registry.get     age: '11346',
22 silly registry.get     connection: 'close',
22 silly registry.get     'x-served-by': 'cache-mdw17323-MDW',
22 silly registry.get     'x-cache': 'HIT',
22 silly registry.get     'x-cache-hits': '1',
22 silly registry.get     'x-timer': 'S1522427287.357682,VS0,VE0',
22 silly registry.get     vary: 'Accept-Encoding, Accept' } ]
23 silly addNameRange number 2 { name: 'sass', range: '*', hasData: true }
24 silly addNameRange versions [ 'sass',
24 silly addNameRange   [ '0.4.0',
24 silly addNameRange     '0.4.1',
24 silly addNameRange     '0.4.2',
24 silly addNameRange     '0.4.3',
24 silly addNameRange     '0.5.0',
24 silly addNameRange     '1.0.0-beta.1',
24 silly addNameRange     '1.0.0-beta.2',
24 silly addNameRange     '1.0.0-beta.3',
24 silly addNameRange     '1.0.0-beta.4',
24 silly addNameRange     '1.0.0-beta.5.1',
24 silly addNameRange     '1.0.0-beta.5.2',
24 silly addNameRange     '1.0.0-beta.5.3',
24 silly addNameRange     '1.0.0-rc.1',
24 silly addNameRange     '1.0.0',
24 silly addNameRange     '1.1.0',
24 silly addNameRange     '1.1.1' ] ]
25 verbose addNamed [ 'sass', '1.1.1' ]
26 verbose addNamed [ '1.1.1', '1.1.1' ]
27 silly lockFile acb2d6e5-sass-1-1-1 sass@1.1.1
28 verbose lock sass@1.1.1 C:\Users\duff_l\AppData\Roaming\npm-cache\acb2d6e5-sass-1-1-1.lock
29 silly lockFile 7da6b189-ry-npmjs-org-sass-sass-1-1-1-tgz https://registry.npmjs.org/sass/-/sass-1.1.1.tgz
30 verbose lock https://registry.npmjs.org/sass/-/sass-1.1.1.tgz C:\Users\duff_l\AppData\Roaming\npm-cache\7da6b189-ry-npmjs-org-sass-sass-1-1-1-tgz.lock
31 verbose addRemoteTarball [ 'https://registry.npmjs.org/sass/-/sass-1.1.1.tgz',
31 verbose addRemoteTarball   'e4415c480c68e054a618e5b2d595bab894018967' ]
32 info retry fetch attempt 1 at 11:28:08
33 verbose fetch to= C:\Users\duff_l\AppData\Local\Temp\npm-166752-y5TvHS8j\1522427288691-0.7600351586129472\tmp.tgz
34 http GET https://registry.npmjs.org/sass/-/sass-1.1.1.tgz
35 http 200 https://registry.npmjs.org/sass/-/sass-1.1.1.tgz
36 verbose tar unpack C:\Users\duff_l\AppData\Local\Temp\npm-166752-y5TvHS8j\1522427288691-0.7600351586129472\tmp.tgz
37 silly lockFile 0b52ef0c-ing-npm-cache-sass-1-1-1-package tar://C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package
38 verbose lock tar://C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package C:\Users\duff_l\AppData\Roaming\npm-cache\0b52ef0c-ing-npm-cache-sass-1-1-1-package.lock
39 silly lockFile c190e5ee-88691-0-7600351586129472-tmp-tgz tar://C:\Users\duff_l\AppData\Local\Temp\npm-166752-y5TvHS8j\1522427288691-0.7600351586129472\tmp.tgz
40 verbose lock tar://C:\Users\duff_l\AppData\Local\Temp\npm-166752-y5TvHS8j\1522427288691-0.7600351586129472\tmp.tgz C:\Users\duff_l\AppData\Roaming\npm-cache\c190e5ee-88691-0-7600351586129472-tmp-tgz.lock
41 silly gunzTarPerm modes [ '755', '644' ]
42 silly gunzTarPerm extractEntry package.json
43 silly gunzTarPerm extractEntry README.md
44 silly gunzTarPerm extractEntry sass.dart.js
45 silly gunzTarPerm extractEntry sass.js
46 silly lockFile 0b52ef0c-ing-npm-cache-sass-1-1-1-package tar://C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package
47 silly lockFile 0b52ef0c-ing-npm-cache-sass-1-1-1-package tar://C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package
48 silly lockFile c190e5ee-88691-0-7600351586129472-tmp-tgz tar://C:\Users\duff_l\AppData\Local\Temp\npm-166752-y5TvHS8j\1522427288691-0.7600351586129472\tmp.tgz
49 silly lockFile c190e5ee-88691-0-7600351586129472-tmp-tgz tar://C:\Users\duff_l\AppData\Local\Temp\npm-166752-y5TvHS8j\1522427288691-0.7600351586129472\tmp.tgz
50 silly lockFile 7da6b189-ry-npmjs-org-sass-sass-1-1-1-tgz https://registry.npmjs.org/sass/-/sass-1.1.1.tgz
51 silly lockFile 7da6b189-ry-npmjs-org-sass-sass-1-1-1-tgz https://registry.npmjs.org/sass/-/sass-1.1.1.tgz
52 silly lockFile acb2d6e5-sass-1-1-1 sass@1.1.1
53 silly lockFile acb2d6e5-sass-1-1-1 sass@1.1.1
54 silly lockFile abea0ec1-sass sass@
55 silly lockFile abea0ec1-sass sass@
56 silly resolved [ { name: 'sass',
56 silly resolved     description: 'A pure JavaScript implementation of Sass.',
56 silly resolved     license: 'MIT',
56 silly resolved     bugs: { url: 'https://github.com/sass/dart-sass/issues' },
56 silly resolved     homepage: 'https://github.com/sass/dart-sass',
56 silly resolved     repository: { type: 'git', url: 'https://github.com/sass/dart-sass' },
56 silly resolved     author:
56 silly resolved      { name: 'Natalie Weizenbaum',
56 silly resolved        email: 'nweiz@google.com',
56 silly resolved        url: 'https://github.com/nex3' },
56 silly resolved     engines: { node: '>=0.11.8' },
56 silly resolved     main: 'sass.dart.js',
56 silly resolved     bin: { sass: 'sass.js' },
56 silly resolved     keywords: [ 'style', 'scss', 'sass', 'preprocessor', 'css' ],
56 silly resolved     version: '1.1.1',
56 silly resolved     readme: 'A pure JavaScript implementation of [Sass][sass]. **Sass makes CSS fun again**.\n\n<table>\n  <tr>\n    <td>\n      <img width="118px" alt="Sass logo" src="https://rawgit.com/sass/sass-site/master/source/assets/img/logos/logo.svg" />\n    </td>\n    <td valign="middle">\n      <a href="https://www.npmjs.com/package/sass"><img width="100%" alt="npm statistics" src="https://nodei.co/npm/sass.png?downloads=true"></a>\n    </td>\n    <td valign="middle">\n      <a href="https://travis-ci.org/sass/dart-sass"><img alt="Travis build status" src="https://api.travis-ci.org/sass/dart-sass.svg?branch=master"></a>\n      <br>\n      <a href="https://ci.appveyor.com/project/nex3/dart-sass"><img alt="Appveyor build status" src="https://ci.appveyor.com/api/projects/status/84rl9hvu8uoecgef?svg=true"></a>\n    </td>\n  </tr>\n</table>\n\n[sass]: http://sass-lang.com/\n\nThis package is a distribution of [Dart Sass][], compiled to pure JavaScript\nwith no native code or external dependencies. It provides a command-line `sass`\nexecutable and a Node.js API.\n\n[Dart Sass]: https://github.com/sass/dart-sass\n\n* [Usage](#usage)\n* [API](#api)\n* [See Also](#see-also)\n* [Behavioral Differences from Ruby Sass](#behavioral-differences-from-ruby-sass)\n\n## Usage\n\nYou can install Sass globally using `npm install -g sass` which will provide\naccess to the `sass` executable. You can also add it to your project using\n`npm install --save-dev sass`. This provides the executable as well as a\nlibrary:\n\n[npm]: https://www.npmjs.com/package/sass\n\n```js\nvar sass = require(\'sass\');\n\nsass.render({file: scss_filename}, function(err, result) { /* ... */ });\n\n// OR\n\nvar result = sass.renderSync({file: scss_filename});\n```\n\n[See below](#api) for details on Dart Sass\'s JavaScript API.\n\n## API\n\nWhen installed via npm, Dart Sass supports a JavaScript API that aims to be\ncompatible with [Node Sass](https://github.com/sass/node-sass#usage). Full\ncompatibility is a work in progress, but Dart Sass currently supports the\n`render()` and `renderSync()` functions. Note however that by default,\n**`renderSync()` is more than twice as fast as `render()`**, due to the overhead\nof asynchronous callbacks.\n\nTo avoid this performance hit, `render()` can use the [`fibers`][fibers] package\nto call asynchronous importers from the synchronous code path. To enable this,\npass the `Fiber` class to the `fiber` option:\n\n[fibers]: https://www.npmjs.com/package/fibers\n\n```js\nvar sass = require("sass");\nvar Fiber = require("fibers");\n\nsass.render({\n  file: "input.scss",\n  importer: function(url, prev, done) {\n    // ...\n  },\n  fiber: Fiber\n}, function(err, result) {\n  // ...\n});\n```\n\nBoth `render()` and `renderSync()` support the following options:\n\n* [`file`](https://github.com/sass/node-sass#file)\n* [`data`](https://github.com/sass/node-sass#data)\n* [`includePaths`](https://github.com/sass/node-sass#includepaths)\n* [`indentedSyntax`](https://github.com/sass/node-sass#indentedsyntax)\n* [`indentType`](https://github.com/sass/node-sass#indenttype)\n* [`indentWidth`](https://github.com/sass/node-sass#indentwidth)\n* [`linefeed`](https://github.com/sass/node-sass#linefeed)\n* [`importer`](https://github.com/sass/node-sass#importer--v200---experimental)\n* [`functions`](https://github.com/sass/node-sass#functions--v300---experimental)\n* Only the `"expanded"` and `"compressed"` values of\n  [`outputStyle`](https://github.com/sass/node-sass#outputstyle) are supported.\n\nThe following options are not yet supported, but are intended:\n\n* [`omitSourceMapUrl`](https://github.com/sass/node-sass#omitsourcemapurl)\n* [`outFile`](https://github.com/sass/node-sass#outfile)\n* [`sourceMap`](https://github.com/sass/node-sass#sourcemap)\n* [`sourceMapContents`](https://github.com/sass/node-sass#sourcemapcontents)\n* [`sourceMapEmbed`](https://github.com/sass/node-sass#sourcemapembed)\n* [`sourceMapRoot`](https://github.com/sass/node-sass#sourcemaproot)\n\nNo support is intended for the following options:\n\n* [`precision`](https://github.com/sass/node-sass#precision). Dart Sass defaults\n  to a sufficiently high precision for all existing browsers, and making this\n  customizable would make the code substantially less efficient.\n\n* [`sourceComments`](https://github.com/sass/node-sass#sourcecomments). Once\n  Dart Sass supports source maps, that will be the recommended way of locating\n  the origin of generated selectors.\n\n## See Also\n\n* [Dart Sass][], from which this package is compiled, can be used either as a\n  stand-alone executable or as a Dart library. Running Dart Sass on the Dart VM\n  is substantially faster than running the pure JavaScript version, so this may\n  be appropriate for performance-sensitive applications. The Dart API is also\n  (currently) more user-friendly than the JavaScript API. See\n  [the Dart Sass README][Using Dart Sass] for details on how to use it.\n\n* [Node Sass][], which is a wrapper around [LibSass][], the C++ implementation\n  of Sass. Node Sass supports the same API as this package and is also faster\n  (although it\'s usually a little slower than Dart Sass). However, it requires a\n  native library which may be difficult to install, and it\'s generally slower to\n  add features and fix bugs.\n\n[Using Dart Sass]: https://github.com/sass/dart-sass#using-dart-sass\n[Node Sass]: https://www.npmjs.com/package/node-sass\n[LibSass]: https://sass-lang.com/libsass\n\n## Behavioral Differences from Ruby Sass\n\nThere are a few intentional behavioral differences between Dart Sass and Ruby\nSass. These are generally places where Ruby Sass has an undesired behavior, and\nit\'s substantially easier to implement the correct behavior than it would be to\nimplement compatible behavior. These should all have tracking bugs against Ruby\nSass to update the reference behavior.\n\n1. `@extend` only accepts simple selectors, as does the second argument of\n   `selector-extend()`. See [issue 1599][].\n\n2. Subject selectors are not supported. See [issue 1126][].\n\n3. Pseudo selector arguments are parsed as `<declaration-value>`s rather than\n   having a more limited custom parsing. See [issue 2120][].\n\n4. The numeric precision is set to 10. See [issue 1122][].\n\n5. The indented syntax parser is more flexible: it doesn\'t require consistent\n   indentation across the whole document. See [issue 2176][].\n\n6. Colors do not support channel-by-channel arithmetic. See [issue 2144][].\n\n7. Unitless numbers aren\'t `==` to unit numbers with the same value. In\n   addition, map keys follow the same logic as `==`-equality. See\n   [issue 1496][].\n\n8. `rgba()` and `hsla()` alpha values with percentage units are interpreted as\n   percentages. Other units are forbidden. See [issue 1525][].\n\n9. Too many variable arguments passed to a function is an error. See\n   [issue 1408][].\n\n10. Allow `@extend` to reach outside a media query if there\'s an identical\n    `@extend` defined outside that query. This isn\'t tracked explicitly, because\n    it\'ll be irrelevant when [issue 1050][] is fixed.\n\n11. Some selector pseudos containing placeholder selectors will be compiled\n    where they wouldn\'t be in Ruby Sass. This better matches the semantics of\n    the selectors in question, and is more efficient. See [issue 2228][].\n\n12. The old-style `:property value` syntax is not supported in the indented\n    syntax. See [issue 2245][].\n\n13. The reference combinator is not supported. See [issue 303][].\n\n14. Universal selector unification is symmetrical. See [issue 2247][].\n\n15. `@extend` doesn\'t produce an error if it matches but fails to unify. See\n    [issue 2250][].\n\n16. Dart Sass currently only supports UTF-8 documents. We\'d like to support\n    more, but Dart currently doesn\'t support them. See [dart-lang/sdk#11744][],\n    for example.\n\n[issue 1599]: https://github.com/sass/sass/issues/1599\n[issue 1126]: https://github.com/sass/sass/issues/1126\n[issue 2120]: https://github.com/sass/sass/issues/2120\n[issue 1122]: https://github.com/sass/sass/issues/1122\n[issue 2176]: https://github.com/sass/sass/issues/2176\n[issue 2144]: https://github.com/sass/sass/issues/2144\n[issue 1496]: https://github.com/sass/sass/issues/1496\n[issue 1525]: https://github.com/sass/sass/issues/1525\n[issue 1408]: https://github.com/sass/sass/issues/1408\n[issue 1050]: https://github.com/sass/sass/issues/1050\n[issue 2228]: https://github.com/sass/sass/issues/2228\n[issue 2245]: https://github.com/sass/sass/issues/2245\n[issue 303]: https://github.com/sass/sass/issues/303\n[issue 2247]: https://github.com/sass/sass/issues/2247\n[issue 2250]: https://github.com/sass/sass/issues/2250\n[dart-lang/sdk#11744]: https://github.com/dart-lang/sdk/issues/11744\n\nDisclaimer: this is not an official Google product.\n',
56 silly resolved     readmeFilename: 'README.md',
56 silly resolved     _id: 'sass@1.1.1',
56 silly resolved     _shasum: 'e4415c480c68e054a618e5b2d595bab894018967',
56 silly resolved     _from: 'sass@',
56 silly resolved     _resolved: 'https://registry.npmjs.org/sass/-/sass-1.1.1.tgz' } ]
57 info install sass@1.1.1 into C:\Program Files\nodejs
58 info installOne sass@1.1.1
59 info C:\Program Files\nodejs\node_modules\sass unbuild
60 verbose tar unpack C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package.tgz
61 silly lockFile a58747cc-m-Files-nodejs-node-modules-sass tar://C:\Program Files\nodejs\node_modules\sass
62 verbose lock tar://C:\Program Files\nodejs\node_modules\sass C:\Users\duff_l\AppData\Roaming\npm-cache\a58747cc-m-Files-nodejs-node-modules-sass.lock
63 silly lockFile 5f8405e5-npm-cache-sass-1-1-1-package-tgz tar://C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package.tgz
64 verbose lock tar://C:\Users\duff_l\AppData\Roaming\npm-cache\sass\1.1.1\package.tgz C:\Users\duff_l\AppData\Roaming\npm-cache\5f8405e5-npm-cache-sass-1-1-1-package-tgz.lock
65 silly gunzTarPerm modes [ '755', '644' ]
66 error Error: EPERM: operation not permitted, mkdir 'C:\Program Files\nodejs\node_modules\sass'
66 error  { Error: EPERM: operation not permitted, mkdir 'C:\Program Files\nodejs\node_modules\sass'
66 error   errno: -4048,
66 error   code: 'EPERM',
66 error   syscall: 'mkdir',
66 error   path: 'C:\\Program Files\\nodejs\\node_modules\\sass',
66 error   fstream_type: 'Directory',
66 error   fstream_path: 'C:\\Program Files\\nodejs\\node_modules\\sass',
66 error   fstream_class: 'DirWriter',
66 error   fstream_stack:
66 error    [ 'C:\\ProgramData\\chocolatey\\lib\\npm\\tools\\node_modules\\npm\\node_modules\\fstream\\lib\\dir-writer.js:36:23',
66 error      'C:\\ProgramData\\chocolatey\\lib\\npm\\tools\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53',
66 error      'FSReqWrap.oncomplete (fs.js:152:21)' ] }
67 error Please try running this command again as root/Administrator.
68 error System Windows_NT 10.0.16299
69 error command "C:\\Program Files\\nodejs\\node.exe" "C:\\ProgramData\\chocolatey\\lib\\npm\\tools\\node_modules\\npm\\bin\\npm-cli.js" "install" "-g" "sass"
70 error cwd C:\Users\duff_l\Documents\GitHub\EventCalendarElm\bulma-0.6.2
71 error node -v v8.10.0
72 error npm -v 1.4.9
73 error path C:\Program Files\nodejs\node_modules\sass
74 error syscall mkdir
75 error fstream_path C:\Program Files\nodejs\node_modules\sass
76 error fstream_type Directory
77 error fstream_class DirWriter
78 error code EPERM
79 error errno -4048
80 error stack Error: EPERM: operation not permitted, mkdir 'C:\Program Files\nodejs\node_modules\sass'
81 error fstream_stack C:\ProgramData\chocolatey\lib\npm\tools\node_modules\npm\node_modules\fstream\lib\dir-writer.js:36:23
81 error fstream_stack C:\ProgramData\chocolatey\lib\npm\tools\node_modules\npm\node_modules\mkdirp\index.js:37:53
81 error fstream_stack FSReqWrap.oncomplete (fs.js:152:21)
82 verbose exit [ -4048, true ]
